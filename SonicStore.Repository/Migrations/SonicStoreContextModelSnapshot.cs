// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SonicStore.Repository.Entity;

#nullable disable

namespace SonicStore.Repository.Migrations
{
    [DbContext(typeof(SonicStoreContext))]
    partial class SonicStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SonicStore.Repository.Entity.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ByAdmin")
                        .HasColumnType("bit")
                        .HasColumnName("by_admin");

                    b.Property<bool>("GoogleAccountStatus")
                        .HasColumnType("bit")
                        .HasColumnName("google_account");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("password");

                    b.Property<DateOnly>("RegisterDate")
                        .HasColumnType("date")
                        .HasColumnName("register_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("status");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__Account__3213E83F1227836C");

                    b.HasIndex(new[] { "Username" }, "UQ__Account__F3DBC572D661B57A")
                        .IsUnique();

                    b.ToTable("Account");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("brand_name");

                    b.Property<string>("brandImage")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("brand_image");

                    b.HasKey("Id")
                        .HasName("PK__Brand__3213E83F07E0250E");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Budget", b =>
                {
                    b.Property<int>("BudgetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetId"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BudgetId");

                    b.HasIndex("CampaignId");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Campaign", b =>
                {
                    b.Property<int>("CampaignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampaignId"));

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int")
                        .HasColumnName("approved_by");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.HasKey("CampaignId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Cart", b =>
                {
                    b.Property<int>("StorageId")
                        .HasColumnType("int")
                        .HasColumnName("storage_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<int>("AddressId")
                        .HasColumnType("int")
                        .HasColumnName("user_address_id");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.HasKey("StorageId", "CustomerId", "AddressId", "Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Category__3213E83F4E6EE1EC");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Checkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CartId")
                        .HasColumnType("int")
                        .HasColumnName("cart_id");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime")
                        .HasColumnName("order_date");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int")
                        .HasColumnName("payment_id");

                    b.Property<int?>("SaleId")
                        .HasColumnType("int")
                        .HasColumnName("sale_id");

                    b.Property<int>("index")
                        .HasColumnType("int")
                        .HasColumnName("index");

                    b.HasKey("Id")
                        .HasName("PK__Order__3213E83FCBD4A6FA");

                    b.HasIndex("CartId");

                    b.HasIndex("PaymentId")
                        .IsUnique();

                    b.ToTable("Checkout");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("OriginalPrice")
                        .HasColumnType("float")
                        .HasColumnName("original_price");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<double>("SalePrice")
                        .HasColumnType("float")
                        .HasColumnName("sale_price");

                    b.Property<int>("Storage_capacity")
                        .HasColumnType("int")
                        .HasColumnName("storage");

                    b.Property<int>("quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Storage");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("payment_method");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float")
                        .HasColumnName("total_price");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("transaction_date");

                    b.HasKey("Id")
                        .HasName("PK__Payment__3213E83F31074084");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int")
                        .HasColumnName("brand_id");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("detail");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("update_date");

                    b.HasKey("Id")
                        .HasName("PK__Product__3213E83FD41103F3");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("image");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.HasKey("Id")
                        .HasName("PK__Product___3213E83F88F164DB");

                    b.HasIndex("ProductId");

                    b.ToTable("Product_Image");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("role_name");

                    b.HasKey("Id")
                        .HasName("PK__Role__3213E83F5E85A4EC");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.StatusOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("create_at");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int")
                        .HasColumnName("create_by");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("checkout_id");

                    b.Property<string>("Type")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("update_at");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int")
                        .HasColumnName("update_by");

                    b.HasKey("Id")
                        .HasName("PK__Status__3213E83F97D90152");

                    b.HasIndex("OrderId");

                    b.ToTable("status_order");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.StatusPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("create_at");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int")
                        .HasColumnName("create_by");

                    b.Property<int>("Payment_id")
                        .HasColumnType("int")
                        .HasColumnName("payment_id");

                    b.Property<string>("Type")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("update_at");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int")
                        .HasColumnName("update_by");

                    b.HasKey("Id")
                        .HasName("PK__status_payment__3213E83F");

                    b.HasIndex("Payment_id");

                    b.ToTable("status_payment");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime")
                        .HasColumnName("dob");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("full_name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("gender");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("phone");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int")
                        .HasColumnName("update_by");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("update_date");

                    b.HasKey("Id")
                        .HasName("PK__User__3213E83FD23B5FEA");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "AccountId" }, "UQ__User__46A222CC47970D57")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__User__AB6E6164D8A3A270")
                        .IsUnique();

                    b.HasIndex(new[] { "Phone" }, "UQ__User__B43B145F81F86A8C")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.UserAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("User_Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("user_address");

                    b.HasKey("Id")
                        .HasName("PK__User_Add__3213E83F371BAF55");

                    b.HasIndex("UserId");

                    b.ToTable("User_Address");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Budget", b =>
                {
                    b.HasOne("SonicStore.Repository.Entity.Campaign", "Campaign")
                        .WithMany("Budgets")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Campaign", b =>
                {
                    b.HasOne("SonicStore.Repository.Entity.User", "User")
                        .WithMany("Campaigns")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Cart", b =>
                {
                    b.HasOne("SonicStore.Repository.Entity.UserAddress", "UserAddress")
                        .WithMany("OrderDetails")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SonicStore.Repository.Entity.User", "User")
                        .WithMany("OrderDetails")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SonicStore.Repository.Entity.Inventory", "Storage")
                        .WithMany("OrderDetails")
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Storage");

                    b.Navigation("User");

                    b.Navigation("UserAddress");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Checkout", b =>
                {
                    b.HasOne("SonicStore.Repository.Entity.Cart", "OrderDetails")
                        .WithMany("Orders")
                        .HasForeignKey("CartId")
                        .HasPrincipalKey("Id");

                    b.HasOne("SonicStore.Repository.Entity.Payment", "Payment")
                        .WithOne("Order")
                        .HasForeignKey("SonicStore.Repository.Entity.Checkout", "PaymentId")
                        .IsRequired()
                        .HasConstraintName("FK__Order__payment_i__62E4AA3C");

                    b.Navigation("OrderDetails");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Inventory", b =>
                {
                    b.HasOne("SonicStore.Repository.Entity.Product", "Product")
                        .WithMany("Storages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Product", b =>
                {
                    b.HasOne("SonicStore.Repository.Entity.Brand", "BrandNavigation")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .IsRequired()
                        .HasConstraintName("FK__Product__brand_i__4924D839");

                    b.HasOne("SonicStore.Repository.Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .IsRequired();

                    b.Navigation("BrandNavigation");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.ProductImage", b =>
                {
                    b.HasOne("SonicStore.Repository.Entity.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Product_I__produ__4CF5691D");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.StatusOrder", b =>
                {
                    b.HasOne("SonicStore.Repository.Entity.Checkout", "Order")
                        .WithMany("Status")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.StatusPayment", b =>
                {
                    b.HasOne("SonicStore.Repository.Entity.Payment", "Payment")
                        .WithMany("StatusPayments")
                        .HasForeignKey("Payment_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.User", b =>
                {
                    b.HasOne("SonicStore.Repository.Entity.Account", "Account")
                        .WithOne("User")
                        .HasForeignKey("SonicStore.Repository.Entity.User", "AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__User__account_id__3DB3258D");

                    b.HasOne("SonicStore.Repository.Entity.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.UserAddress", b =>
                {
                    b.HasOne("SonicStore.Repository.Entity.User", "User")
                        .WithMany("UserAddresses")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__User_Addr__user___4183B671");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Account", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Campaign", b =>
                {
                    b.Navigation("Budgets");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Cart", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Checkout", b =>
                {
                    b.Navigation("Status");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Inventory", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Payment", b =>
                {
                    b.Navigation("Order");

                    b.Navigation("StatusPayments");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Product", b =>
                {
                    b.Navigation("ProductImages");

                    b.Navigation("Storages");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.User", b =>
                {
                    b.Navigation("Campaigns");

                    b.Navigation("OrderDetails");

                    b.Navigation("UserAddresses");
                });

            modelBuilder.Entity("SonicStore.Repository.Entity.UserAddress", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
