@model List<Cart>
@{
	var addressUser = ViewBag.AddressUser as UserAddress;
	var address = addressUser.User_Address as string;
	var user = ViewBag.user as User;
}
<link rel="stylesheet" href=" https://cdn.jsdelivr.net/npm/pretty-checkbox@3.0/dist/pretty-checkbox.min.css">
<link href="~/css/PageDesign/cart.css" rel="stylesheet" />
<title>Manage cart</title>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<style>
	.mess-empty h2{
		font-weight: 600;
		color: #4a4a4a;
		text-align: center;
	}
	.icon-empty{
		text-align:center;
	}

	body {
		display: flex;
		flex-direction: column;
	}

	body {
		min-height: 100vh;
		margin: 0;
	}

	main {
		flex: 1;
	}
</style>
<html>
<main>
<section style="min-height:965px;">

	<div class="container">
		<div class="row">
			<div class="title-cart">Giỏ hàng</div>
			<div class="col-md-9">
				<div class="mess-empty">
					<h2>Hiện tại chưa có sản phẩm nào</h2>
					<div class="icon-empty">
						<svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" width="400" height="400" x="0" y="0" viewBox="0 0 512 512" style="enable-background:new 0 0 512 512" xml:space="preserve" class=""><g><linearGradient id="a" x1="342.57" x2="409.61" y1="309.6" y2="309.6" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#cacfdd"></stop><stop offset="1" stop-color="#eef0f1"></stop></linearGradient><linearGradient xlink:href="#a" id="b" x1="307.37" x2="332.36" y1="81.4" y2="81.4"></linearGradient><linearGradient xlink:href="#a" id="c" x1="282.38" x2="307.37" y1="81.4" y2="81.4"></linearGradient><linearGradient xlink:href="#a" id="d" x1="377.56" x2="402.55" y1="56.2" y2="56.2" gradientTransform="rotate(-45 417.036 73.7)"></linearGradient><linearGradient xlink:href="#a" id="e" x1="352.57" x2="377.56" y1="56.2" y2="56.2" gradientTransform="rotate(-45 417.036 73.7)"></linearGradient><g data-name="Empty Cart"><path fill="#f5f5f5" d="m171.19 186.06 28.61 173.93h200.59l13.52-147.86z" opacity="1" data-original="#f5f5f5" class=""></path><path fill="#a9afc4" d="M370.16 240.94a10.59 10.59 0 0 1 9.6 11.62l-7.22 71.57a6.9 6.9 0 0 1-13.76-.68l-.15-71.93a10.6 10.6 0 0 1 11.53-10.58z" opacity="1" data-original="#a9afc4" class=""></path><path fill="url(#a)" d="M409.61 259.21 400.39 360h-52.9c-17.49-45.81 13.6-95.81 62.12-100.79z" opacity="1" data-original="url(#a)"></path><circle cx="313.97" cy="426.15" r="17.98" fill="#5e6175" opacity="1" data-original="#5e6175" class=""></circle><circle cx="313.97" cy="426.15" r="6.48" fill="#f5f5f5" opacity="1" data-original="#f5f5f5" class=""></circle><circle cx="136.94" cy="426.15" r="17.98" fill="#5e6175" opacity="1" data-original="#5e6175" class=""></circle><circle cx="136.94" cy="426.15" r="6.48" fill="#f5f5f5" opacity="1" data-original="#f5f5f5" class=""></circle><path fill="#5e6175" d="M136.94 447.14a21 21 0 1 1 21-21 21 21 0 0 1-21 21zm0-36a15 15 0 1 0 15 15 15 15 0 0 0-15-14.97zM314 447.14a21 21 0 1 1 21-21 21 21 0 0 1-21 21zm0-36a15 15 0 1 0 15 15 15 15 0 0 0-15-14.97zM145.823 129.172l12.733-12.733 4.242 4.242-12.733 12.733zM130.13 103.85h6v18.01h-6zM157.9 142.04h18.01v6H157.9z" opacity="1" data-original="#5e6175" class=""></path><path fill="#f5f5f5" d="M171.19 186.06H92.96l46.94 173.93h59.9z" opacity="1" data-original="#f5f5f5" class=""></path><g fill="#5e6175"><path d="M403.13 363H197.25l-29.66-180.34 249.58 26.8zm-200.78-6h195.3l13-142.2-235.86-25.34z" fill="#5e6175" opacity="1" data-original="#5e6175" class=""></path><path d="M203.33 363H137.6L89 183.06h84.7zm-61.13-6h54.07l-27.63-167.94H96.88z" fill="#5e6175" opacity="1" data-original="#5e6175" class=""></path><path d="M178.14 189.06H91.68L53.6 149.34h87.1zm-83.9-6h70l-26.13-27.72H67.67z" fill="#5e6175" opacity="1" data-original="#5e6175" class=""></path><path d="M132.08 162.63H43.29a10.3 10.3 0 0 1 0-20.59h88.79a10.3 10.3 0 0 1 0 20.59zM43.29 148a4.3 4.3 0 0 0 0 8.59h88.79a4.3 4.3 0 0 0 0-8.59z" fill="#5e6175" opacity="1" data-original="#5e6175" class=""></path><path d="M132.08 145H43.29a7.3 7.3 0 0 0 0 14.59h88.79a7.3 7.3 0 0 0 0-14.59zM202.8 429.15h-65.9v-69.16h6v63.16h53.9v-63.16h6z" fill="#5e6175" opacity="1" data-original="#5e6175" class=""></path><path d="M375.02 429.15H196.8v-69.16h6v63.16h172.22z" fill="#5e6175" opacity="1" data-original="#5e6175" class=""></path><circle cx="199.8" cy="426.15" r="17.98" fill="#5e6175" opacity="1" data-original="#5e6175" class=""></circle><circle cx="375.03" cy="426.15" r="17.98" fill="#5e6175" opacity="1" data-original="#5e6175" class=""></circle><path d="M199.8 447.14a21 21 0 1 1 21-21 21 21 0 0 1-21 21zm0-36a15 15 0 1 0 15 15 15 15 0 0 0-15-14.97zM375 447.14a21 21 0 1 1 21-21 21 21 0 0 1-21 21zm0-36a15 15 0 1 0 15 15 15 15 0 0 0-15-14.97z" fill="#5e6175" opacity="1" data-original="#5e6175" class=""></path></g><circle cx="199.74" cy="426.15" r="6.48" fill="#f5f5f5" opacity="1" data-original="#f5f5f5" class=""></circle><circle cx="375.03" cy="426.15" r="6.48" fill="#f5f5f5" opacity="1" data-original="#f5f5f5" class=""></circle><path fill="#a9afc4" d="M235.28 227.89a12.21 12.21 0 0 1 11.13 12.17v83.3a7 7 0 0 1-13.89.87l-10.44-82.64a12.22 12.22 0 0 1 13.2-13.7zM306.22 235.17a12.26 12.26 0 0 1 11.12 13.32l-6.88 75.45a7 7 0 0 1-14-.3L292.88 248a12.26 12.26 0 0 1 13.34-12.83z" opacity="1" data-original="#a9afc4" class=""></path><path fill="#5e6175" d="M45.45 441.14h329.58v6H45.45z" opacity="1" data-original="#5e6175" class=""></path><path fill="#a9afc4" d="M250.2 175.9v-6a19.63 19.63 0 0 0 5.23-.33l1.47 5.81a23.75 23.75 0 0 1-6.7.52zm-10 0h-6v-6h6zm26.46-7.3-4.93-3.41a10.86 10.86 0 0 0 1.78-4.32l5.91 1a16.69 16.69 0 0 1-2.76 6.73zm-4.56-15.28a11.08 11.08 0 0 0-3.22-3.39l3.38-5a17.06 17.06 0 0 1 5 5.25zm-11-5.28h-6v-6h6zm-16 0a33.29 33.29 0 0 1-6.52-.3l1.07-5.91a29.09 29.09 0 0 0 5.45.21zm-16.81-5.82a19.08 19.08 0 0 1-3.89-5.91l5.53-2.31a13 13 0 0 0 2.67 4.05zm1-16.2-5.85-1.33a18.91 18.91 0 0 1 2.83-6.49l5 3.38a13 13 0 0 0-2.06 4.42zm8.25-9.37-2.15-5.65a19.15 19.15 0 0 1 6.92-1.17v6a13.12 13.12 0 0 0-4.85.82zm62.85-.8v-6a24.86 24.86 0 0 0 5.37-.23l1.22 5.88a29.56 29.56 0 0 1-6.67.35zm-10 0h-6v-6h6zm-16 0h-6v-6h6zm-16 0h-6v-6h6zm58.61-6.72-4.79-3.62a10.84 10.84 0 0 0 2-4.23l5.86 1.28a16.86 16.86 0 0 1-3.07 6.57zm-2.58-17.19c0-.1-.47-.06 6-.06z" opacity="1" data-original="#a9afc4" class=""></path><path fill="url(#a)" d="M307.37 88.46a14.12 14.12 0 0 1 14.12-14.12h10.87a14.12 14.12 0 0 1-14.13 14.12z" opacity="1" data-original="url(#a)"></path><path fill="url(#a)" d="M307.37 88.46a14.12 14.12 0 0 0-14.12-14.12h-10.87a14.12 14.12 0 0 0 14.13 14.12z" opacity="1" data-original="url(#a)"></path><path fill="#5e6175" d="M318.23 91.46h-13.86v-3a17.14 17.14 0 0 1 17.12-17.12h13.87v3a17.14 17.14 0 0 1-17.13 17.12zm-7.45-6h7.45A11.15 11.15 0 0 0 329 77.34h-7.46a11.14 11.14 0 0 0-10.76 8.12z" opacity="1" data-original="#5e6175" class=""></path><path fill="#5e6175" d="M310.37 91.46h-13.86a17.14 17.14 0 0 1-17.13-17.12v-3h13.87a17.14 17.14 0 0 1 17.12 17.12zm-24.58-14.12a11.15 11.15 0 0 0 10.72 8.12H304a11.14 11.14 0 0 0-10.71-8.12z" opacity="1" data-original="#5e6175" class=""></path><path fill="url(#a)" d="M382 95.52a14.13 14.13 0 0 1 0-20l7.69-7.69a14.14 14.14 0 0 1 0 20z" opacity="1" data-original="url(#a)"></path><path fill="url(#a)" d="M382 95.52a14.12 14.12 0 0 0-20 0l-7.68 7.68a14.11 14.11 0 0 0 20 0z" opacity="1" data-original="url(#a)"></path><path fill="#5e6175" d="m382 99.76-2.12-2.12a17.12 17.12 0 0 1 0-24.22l9.81-9.8 2.12 2.12a17.12 17.12 0 0 1 0 24.22zm7.4-27.37-5.27 5.28A11.12 11.12 0 0 0 382.32 91l5.27-5.27a11.14 11.14 0 0 0 1.83-13.34z" opacity="1" data-original="#5e6175" class=""></path><path fill="#5e6175" d="m352.25 105.32-2.12-2.12 9.8-9.8a17.12 17.12 0 0 1 24.22 0l2.12 2.12-9.81 9.8a17.09 17.09 0 0 1-24.21 0zm6.65-2.4a11.11 11.11 0 0 0 13.32-1.84l5.27-5.27a11.13 11.13 0 0 0-13.32 1.83z" opacity="1" data-original="#5e6175" class=""></path><path fill="#a9afc4" d="m417.19 189.06-.13-6a12.64 12.64 0 0 0 4.71-1l2.37 5.51a18.61 18.61 0 0 1-6.95 1.49zm-93.75-3h-6v-6h6zm82.56-.43a18.73 18.73 0 0 1-4.91-5.13l5-3.25a12.9 12.9 0 0 0 3.34 3.49zm26.91-5.84-5.18-3a12.55 12.55 0 0 0 1.58-4.54l5.94.85a18.4 18.4 0 0 1-2.34 6.69zm-109.47-9.73h-6a23.28 23.28 0 0 1 .59-6.7l5.81 1.49a18.52 18.52 0 0 0-.4 5.21zm80.68-.71h-6a15 15 0 0 0-.54-5l5.74-1.75a20.6 20.6 0 0 1 .8 6.75zm31.32-6.69h-6v-6h6zm-107.31-4.5-3.78-4.66a18.61 18.61 0 0 1 6.27-3.34l1.76 5.73a12.66 12.66 0 0 0-4.25 2.27zm64.85-.35a12.42 12.42 0 0 0-4.34-2.07l1.5-5.81a18.16 18.16 0 0 1 6.41 3.06zm-13.55-2.47h-6v-6h6zm-16 0h-6v-6h6zm-16 0h-6v-6h6zm88-8.68h-6v-6h6zm0-16h-6v-6h6zm-6.6-15a12.53 12.53 0 0 0-2.31-4.22l4.61-3.84a18.58 18.58 0 0 1 3.42 6.24zm-9-8.44a19.64 19.64 0 0 0-5.26-.36v-6a24.52 24.52 0 0 1 6.68.53zm-15.26-.36h-6v-6h6z" opacity="1" data-original="#a9afc4" class=""></path><path fill="#5e6175" d="M106.79 354.14a9.13 9.13 0 1 1 6.41-15.63 9.12 9.12 0 0 1-6.41 15.63zm0-12.26a3.13 3.13 0 1 0 3.13 3.11 3.13 3.13 0 0 0-3.13-3.11zM75.05 401.56A12.46 12.46 0 1 1 87.51 389a12.47 12.47 0 0 1-12.46 12.56zm0-18.91a6.46 6.46 0 1 0 6.46 6.41 6.47 6.47 0 0 0-6.46-6.41z" opacity="1" data-original="#5e6175" class=""></path><circle cx="417.32" cy="333.49" r="58.68" fill="#f5f5f5" opacity="1" data-original="#f5f5f5" class=""></circle><path fill="#5e6175" d="M417.32 395.18A61.69 61.69 0 1 1 479 333.49a61.75 61.75 0 0 1-61.68 61.69zm0-117.37A55.69 55.69 0 1 0 473 333.49a55.75 55.75 0 0 0-55.68-55.68z" opacity="1" data-original="#5e6175" class=""></path><path fill="#e1830e" d="m385.787 348.64 46.662-46.663 15.801 15.802-46.662 46.662z" opacity="1" data-original="#e1830e" class=""></path><path fill="#e1830e" d="m385.794 317.779 15.801-15.802 46.662 46.662-15.801 15.802z" opacity="1" data-original="#e1830e" class=""></path></g></g></svg>
					</div>
				</div>
				<div class="row headingCart">
					<div class="col-md-5 head-contain">
						<div class="pretty p-icon p-smooth"  id="checkboxAll">
							<input type="checkbox" onclick="checkAll()" />
							<div class="state p-danger">
								<i class="icon fa fa-check"></i>
								<label></label>
							</div>
						</div>
						<div class="full-product txt" id="all-product">
							Tất cả (<span></span> sản phẩm)
						</div>
					</div>
					<div class="col-md-2 txt">Đơn giá</div>
					<div class="col-md-2 txt">Số lượng</div>
					<div class="col-md-2 txt">Thành tiền</div>
					<div class="col-md-1 trash"><img style="cursor:pointer" id="trash-all" data-trashall="1" src="https://frontend.tikicdn.com/_desktop-next/static/img/icons/trash.svg" alt=""></div>
				</div>
				<!-- item cart -->
				<div id="listCartItem">

				@* @foreach(var item in Model)
				{
					<div class="row">
						<div class="cart-item">
								<div class="col-md-5 head-contain">
									<div class="pretty p-icon p-smooth">
									<input type="checkbox" class="checkbox" onclick="updateMasterCheckbox()" />
									<div class="state p-danger">
											<i class="icon fa fa-check"></i>
											<label></label>
										</div>
									</div>
									<div class="product-img">
									<img src="https://clickbuy.com.vn/uploads/images/2023/09/iphone-15-pro-max-titan-1.png" alt="">
									</div>
									<div class="full-product txt title-product">
										@item.Storage.Product.Name
									</div>
								</div>
							<div class="col-md-2 txt js-format-price" data-price="@item.Storage.SalePrice"></div>
								<div class="col-md-2 txt quantity">
									<div>
									<span onclick="decreseQuantity(this) " class="decrease" data-quanity="down" data-id="@item.Id">
											<img src="https://frontend.tikicdn.com/_desktop-next/static/img/icons/decrease.svg" alt="">
										</span>

									</div>
									<div>

									<input class="valueQuantity" type="tel" value="@item.Quantity" readonly>
									</div>
									<div>
									<span onclick="increseQuantity(this)" class="increase" data-quantity="up" data-id="@item.Id">
											<img src="https://frontend.tikicdn.com/_desktop-next/static/img/icons/increase.svg" alt="">
										</span>

									</div>
								</div>
							<div class="col-md-2 txt js-format-price1" data-price="@item.Price"></div>
								<div class="col-md-1 trash1"><img id="trash1" onclick="deleteItem('1')" src="https://frontend.tikicdn.com/_desktop-next/static/img/icons/trash.svg" alt=""></div>
						</div>
					</div>
				}
				<div class="row">
					<div class="cart-item">
						<div class="col-md-5 head-contain">
							<div class="pretty p-icon p-smooth">
								<input type="checkbox" class="checkbox" onclick="updateMasterCheckbox()" />
								<div class="state p-danger">
									<i class="icon fa fa-check"></i>
									<label></label>
								</div>
							</div>
							<div class="product-img">
								<img src="https://clickbuy.com.vn/uploads/images/2023/09/iphone-15-pro-max-titan-1.png" alt="">
							</div>
							<div class="full-product txt title-product">
								Korean Dabo Antibacterial Charcoal Essence Cleanser (120ml) - GENUINE
							</div>
						</div>
						<div class="col-md-2 txt js-format-price" data-price="105000">105000</div>
						<div class="col-md-2 txt quantity">
							<div>
								<span onclick="decreseQuantity(this) " class="decrease">
									<img src="https://frontend.tikicdn.com/_desktop-next/static/img/icons/decrease.svg" alt="">
								</span>

							</div>
							<div>

								<input class="valueQuantity" type="tel" value="1" readonly>
							</div>
							<div>
								<span onclick="increseQuantity(this)" class="increase">
									<img src="https://frontend.tikicdn.com/_desktop-next/static/img/icons/increase.svg" alt="">
								</span>

							</div>
						</div>
						<div class="col-md-2 txt js-format-price1" data-price="105000">105000</div>
						<div class="col-md-1 trash1"><img id="trash1" onclick="deleteItem('1')" src="https://frontend.tikicdn.com/_desktop-next/static/img/icons/trash.svg" alt=""></div>
					
					</div>
				</div *@>
				</div>
				<!-- item cart -->
			</div>
			<div class="col-md-3">
				<div class="row headingCart1">
					<div class="contain-head-delivery">
						<div>
							<h3>Giao tới</h3>
						</div>
						<div>
							<a asp-controller="Address" asp-action="CartAdressScreen">
								Thay đổi
							</a>
						</div>
					</div>
					<div class="customer-name">
						<span class="name">@user.FullName</span>
						<i></i>
						<span class="phone">@user.Phone</span>
					</div>
					<div class="customer-address">
						<p>
							<span class="address__type address__type--home">Nhà</span>
							@address
						</p>
					</div>
				</div>
				<div class="row headingCart2">
					<div class="price-Provisional">
						<div class="name">
							Tạm tính
						</div>
						<div class="price"><span class="js-format-price2" data-price=""></span></div>
					</div>
					<div class="price-discount">
						<div class="name">Giảm giá</div>
						<div class="price"><span>0</span>₫</div>
					</div>
					<div class="total-price">
						<div class="fund">Tổng tiền</div>
						<div class="price-final " data-price="">Vui lòng chọn sản phẩm</div>
					</div>
				</div>
				<div class="row">
					
					<div style="padding-right: 0;">
						<button class="btn-cart">Mua (<span>0</span>)</button>
					</div>

				</div>
			</div>
		</div>

	</div>
</section>

</main>
</html>
<script id="data-template" type="x-tmpl-mustache">
	<div class="row">
					<div class="cart-item">
							<div class="col-md-5 head-contain">
								<div class="pretty p-icon p-smooth">
								<input type="checkbox" class="checkbox" data-checkbox-id="{{id}}" onclick="updateMasterCheckbox()" {{#isCheck}}checked{{/isCheck}}/>
								<div class="state p-danger">
										<i class="icon fa fa-check"></i>
										<label></label>
									</div>
								</div>
								<div class="product-img">
								<img src="{{image}}" alt="">
								</div>
								<div class="full-product txt title-product">
									{{name}}
								</div>
							</div>
						<div class="col-md-2 txt js-format-price" data-price="{{salePrice}}">&nbsp;</div>
							<div class="col-md-2 txt quantity">
								<div>
								<span onclick="decreseQuantity(this) " class="decrease" data-quanity="down" data-id="{{id}}">
										<img style="cursor:pointer" src="https://frontend.tikicdn.com/_desktop-next/static/img/icons/decrease.svg" alt="">
									</span>

								</div>
								<div>

								<input class="valueQuantity" type="tel" value="{{quantity}}" id="quantityInput" data-id="{{id}}" data-storage-quantity="{{storageQuantity}}" name="quantityInput" data-original-value="{{quantity}}">
								</div>
								<div>
								<span onclick="increseQuantity(this,{{storageQuantity}})" class="increase" data-quantity="up" data-id="{{id}}">
										<img style="cursor:pointer" src="https://frontend.tikicdn.com/_desktop-next/static/img/icons/increase.svg" alt="">
									</span>

								</div>
							</div>
						<div class="col-md-2 txt js-format-price1" data-price="{{price}}">&nbsp;</div>
							<div class="col-md-1 trash1"><img style="cursor:pointer" id="trash1" data-id="{{id}}" src="https://frontend.tikicdn.com/_desktop-next/static/img/icons/trash.svg" alt=""></div>
					</div>
				</div>
</script>
<script>
	$(document).ready(function () {
		function loadData(checkboxStates) {
			$.ajax({
				url: '/loaddataCart',
				type: 'GET',
				dataType: 'json',
				success: function (response) {
					console.log('loadData success:', response);
					var data = response.data;
					var html = '';
					var template = $('#data-template').html();
					$.each(data, function (i, item) {
						html += Mustache.render(template, {
							id: item.id,
							name: item.name,
							price: item.price,
							image: item.image,
							quantity: item.quantity,
							storageQuantity: item.storageQuantity,
							salePrice: item.salePrice,
							isCheck: item.isCheck

						});
					});
					$('#listCartItem').html(html);
					var formatter = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' });
					var priceTags = document.querySelectorAll('.js-format-price');
					priceTags.forEach(tag => {
						var price = tag.getAttribute('data-price');
						var formattedPrice = formatter.format(price);
						tag.textContent = formattedPrice;
					});
					var priceTags = document.querySelectorAll('.js-format-price1');
					priceTags.forEach(tag => {
						var price = tag.getAttribute('data-price');
						var formattedPrice = formatter.format(price);
						tag.textContent = formattedPrice;
					});
					var saleTags = document.querySelectorAll('.ex_pricesale');
					saleTags.forEach(tag => {
						var price = parseFloat(tag.getAttribute('data-price'));
						var originalPrice = parseFloat(tag.getAttribute('data-price1'));
						var discountPercent = ((originalPrice - price) / originalPrice) * 100;
						var roundedDiscountPercent = Math.round(discountPercent);
						tag.textContent = roundedDiscountPercent + '%';
					});
					if (checkboxStates) {
						restoreCheckboxStates(checkboxStates);
					}
					checkIfEmpty();
					countItemHeading();
					countItemInBtn();
					countItemInBtn();
					$('.checkbox').change(function () {
						countItemInBtn();
					});
					$('.checkbox').change(function () {
						var updatedCheckboxStates = saveCheckboxStates();
						countItemInBtn();
						updateTotalItemCount();
						updateProvisionalTotal(updatedCheckboxStates);
						updateMasterCheckbox(updatedCheckboxStates);
					});
					$('.valueQuantity').off('keypress').on('keypress', function (e) {
						console.log("ok");
						if (e.which == 13) {
							var id = $(this).data('id');
							var quantity = $(this).val();
							var quantityRaw = parseInt($(this).val(), 10);
							var storageQuantity = parseInt($(this).data('storage-quantity'), 10);
							console.log("ID:", id, "Quantity:", quantityRaw, "Storage Quantity:", storageQuantity, "Original Value:", originalValue);
							 if (quantityRaw > storageQuantity) {
								var originalValue = $(this).data('original-value');
								$(this).val(originalValue);
								Swal.fire({
									title: "Đạt giới hạn",
									text: "Tối đa sản phẩm với mục này!",
									icon: "warning"
								});
							}
							else if (isValidQuantity(quantity)) {
								updateQuantityInputAjax(id, quantity);
							}
							else {
								var originalValue = $(this).data('original-value');
								$(this).val(originalValue);
								Swal.fire({
									title: "Giá trị không hợp lệ!",
									text: "Vui lòng nhập một số nguyên dương.",
									icon: "warning"
								});
							}
						}
					});
				},
				error: function () {
					console.log('error');
				}
			});
		}
		loadData();
		function deleteItemAjax(id) {
			$.ajax({
				url: '/delete-item',
				data: {
					id : id
				},
				type: 'POST',
				dataType: 'json',
				success: function (response) {
						loadData();
					if (response == true) {
						console.log("success");
					}
				},
				error: function (err) {
					console.log(err.message);
				}
			});
		}
		function updateQuantityAjax(id, quantity) {
			var checkboxStates = saveCheckboxStates();
			$.ajax({
				url: '/update-quantity',
				data: {
					id: id,
					quantity: quantity
				},
				type: 'POST',
				dataType: 'json',
				success: function (response) {
					loadData(checkboxStates);
					if (response.status === 1) {
						console.log('success');
					}
					else if (response.status === 2) {
						loadData();
					}
					else {
						Swal.fire({
							title: "Đạt giới hạn!",
							text: "Tối đa sản phẩm với mục này!",
							icon: "warning"
						});
					}
					
				},
				error: function (err) {
					console.log(err);
				}
			});
		}
		function updateQuantityInputAjax(id, quantity) {
			var checkboxStates = saveCheckboxStates();
			$.ajax({
				url: '/update-quantity',
				data: {
					id: id,
					quantity: quantity
				},
				type: 'POST',
				dataType: 'json',
				success: function (response) {
					loadData(checkboxStates);
					if (response.status === 3) {
						Swal.fire({
							title: "Đạt giới hạn!",
							text: "Tối đa sản phẩm với mục này!",
							icon: "warning"
						});
					} else {
						updateProvisionalTotal(checkboxStates);
					}
				},
				error: function (err) {
					console.log(err);
				}
			});
		}
		function deleteAllItemAjax(allItem) {
			$.ajax({
				url: '/update-quantity',
				data: {
					all : allItem
				},
				type: 'POST',
				dataType: 'json',
				success: function (response) {
						loadData();
					if (response === 1) {
						$('.headingCart').fadeOut();
						$('.mess-empty').fadeIn();
						$('.headingCart2').fadeOut();
						$('.btn-cart').fadeOut();
					}
				},
				error: function (err) {
					console.log(err);
				}
			});
		}
		function buyCheckedItemsAjax() {
			var checkedIds = [];
			$('.checkbox:checked').each(function () {
				checkedIds.push($(this).data('checkbox-id'));
			});
			if (checkedIds.length === 0) {
				Swal.fire({
					title: "Chưa chọn sản phẩm",
					text: "Vui lòng chọn ít nhất một sản phẩm để mua.",
					icon: "warning"
				});
				return;
			}
			$.ajax({
				url: '/buy-product',
				data: JSON.stringify(checkedIds),
				type: 'POST',
				dataType: 'json',
				contentType: 'application/json; charset=utf-8',
				success: function (response) {
					if (response.redirectUrl) {
						window.location.href = response.redirectUrl;
						console.log("redirect di")
						console.log(response.redirectUrl)
					}
				},
				error: function (xhr, status, error) {
					if (xhr.responseJSON) {
						console.error('Error details:', xhr.responseJSON.message);
					} else {
						console.error('Error details:', xhr.responseText);
					}
				}

			});
		}
		function isValidQuantity(value) {
			const regex = /^\d+$/;
			return regex.test(value) && parseInt(value) >= 1;
		}
		$(document).on('click', '.btn-cart', function () {
			buyCheckedItemsAjax();
		});
		$(document).on('click', '.decrease', function () {
			console.log("decrease");
			var id = $(this).data('id');
			var quantity = 'down';
			updateQuantityAjax(id, quantity);
		});

		$(document).on('click', '.increase', function () {
			console.log("increase");
			var id = $(this).data('id');
			var quantity = 'up';
			updateQuantityAjax(id, quantity);
		});
		$(document).on('click', '#trash1', function () {
			var id = $(this).data('id');
			Swal.fire({
				title: "Bạn có chắc chắn xóa?",
				text: "Bạn sẽ không thể khôi phục mục này!",
				icon: "warning",
				showCancelButton: true,
				confirmButtonText: 'Xóa',
				cancelButtonText: 'Hủy'
			}).then((result) => {
				if (result.isConfirmed) {
					deleteItemAjax(id);
					loadData();
				}
			});
			
		});
		$(document).on('click', '#trash-all', function () { 
			var allItem = $(this).data('trashall');
			Swal.fire({
				title: "Bạn có chắc chắn xóa tất cả?",
				text: "Bạn sẽ không thể khôi phục mục này!",
				icon: "warning",
				showCancelButton: true,
				confirmButtonText: 'Delete',
				cancelButtonText: 'Cancel'
			}).then((result) => {
				if (result.isConfirmed) {
					deleteAllItemAjax(allItem);
				}
			});
		});
		function checkIfEmpty() {
			if ($('#listCartItem').children('.row').length === 0) {
				$('.headingCart').fadeOut();
				$('.mess-empty').fadeIn();
				$('.headingCart2').fadeOut();
				$('.btn-cart').fadeOut();
			}
			else {
				$('.headingCart').fadeIn();
				$('.mess-empty').fadeOut();
				$('.headingCart2').fadeIn();
				$('.btn-cart').fadeIn();
			}
		}
		// function deleteItem(id) {
		// 	Swal.fire({
		// 		title: "Are you sure?",
		// 		text: "You will not be able to recover this item!",
		// 		icon: "warning",
		// 		showCancelButton: true,
		// 		confirmButtonText: 'Delete',
		// 		cancelButtonText: 'Cancel'
		// 	}).then((result) => {
		// 		if (result.isConfirmed) {
		// 			deleteItemAjax(id);
		// 		}
		// 	});
		// };
		function countItemHeading() {
			var count = 0;
			var all_product = $('#all-product span');
			var cart_item = $('#listCartItem .row');
			cart_item.each(function () {
				count++;
			});
			all_product.text(count);
			console.log(all_product);
		}
		function updateTotalItemCount() {
			var count = 0;
			var totalItem = document.querySelector('.btn-cart span');
			var checkboxes = document.querySelectorAll('.checkbox');

			checkboxes.forEach(function (checkbox) {
				console.log(checkbox.checked);
				if (checkbox.checked) {
					count++;
				}
			});
			console.log(count);
			totalItem.textContent = count;


		}
		function countItemInBtn() {
			var checkboxs = $('.checkbox');
			var count = 0;
			var countCheck = $('.btn-cart span');
			checkboxs.each(function () {
				if ($(this).is(':checked')) {
					count++;
				}
			});
			countCheck.text(count);
		}
		function saveCheckboxStates() {
			var checkboxStates = {};
			$('.checkbox').each(function () {
				var checkboxId = $(this).data('checkbox-id');
				checkboxStates[checkboxId] = this.checked;
			});
			return checkboxStates;
		}
		function restoreCheckboxStates(checkboxStates) {
			for (var checkboxId in checkboxStates) {
				$('input[data-checkbox-id="' + checkboxId + '"]').prop('checked', checkboxStates[checkboxId]);
			}
		}

		function updateProvisionalTotal(checkboxStates) {
			var fund = document.querySelector('.price-final');
			var tempPrice = document.querySelector('.js-format-price2');
			var discount = document.querySelector('.price-discount');
			var total = 0;

			for (var checkboxId in checkboxStates) {
				if (checkboxStates[checkboxId]) {
					var checkbox = $('input[data-checkbox-id="' + checkboxId + '"]');
					var container = checkbox.closest('.cart-item');
					var priceElement = container.find('.js-format-price');
					var price = Number(priceElement.attr('data-price'));
					var quantity = Number(container.find('.valueQuantity').val());
					total += price * quantity;
				}
			}
			var provisionalElement = document.querySelector('.js-format-price2');
			fund.classList.add('js-format-price3');
			fund.setAttribute('data-price', total);
			tempPrice.setAttribute('data-price', total);

			if (total > 0) {
				fund.innerHTML = formatPrice(total);
				fund.style.fontSize = '22px';
				discount.style.display = 'none';
			} else {
				discount.style.display = 'flex';
				fund.style.fontSize = '15px';
				fund.innerHTML = "Vui lòng chọn một sản phẩm";
			}

			provisionalElement.setAttribute('data-price', total);
			provisionalElement.innerHTML = formatPrice(total);
		}

		function checkAll(checkboxStates) {
			var masterCheckbox = document.getElementById('checkboxAll').querySelector('input[type="checkbox"]');
			var isChecked = masterCheckbox.checked;

			for (var checkboxId in checkboxStates) {
				checkboxStates[checkboxId] = isChecked;
				$('input[data-checkbox-id="' + checkboxId + '"]').prop('checked', isChecked);
			}

			updateProvisionalTotal(checkboxStates);
		}

		function updateMasterCheckbox(checkboxStates) {
			var masterCheckbox = document.getElementById('checkboxAll').querySelector('input[type="checkbox"]');
			var allChecked = true;

			for (var checkboxId in checkboxStates) {
				if (!checkboxStates[checkboxId]) {
					allChecked = false;
					break;
				}
			}

			masterCheckbox.checked = allChecked;
			updateProvisionalTotal(checkboxStates);
		}
	});
</script>
<script>
	window.addEventListener('DOMContentLoaded', (event) => {
		sessionStorage.setItem('previousPage', window.location.href);
		var formatter = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' });

		var priceTags = document.querySelectorAll('.js-format-price');
		var priceTags1 = document.querySelectorAll('.js-format-price1');
		var priceTags2 = document.querySelectorAll('.js-format-price2');
		var priceTags3 = document.querySelectorAll('.js-format-price3');
		var all_product = document.querySelector('#all-product span');
		var cart_item = document.querySelectorAll('.cart-item');
		var count = 0;
		console.log(all_product);
		cart_item.forEach(item => {
			count++;
		});
		all_product.textContent=count;
		priceTags.forEach(tag => {
			var price = tag.getAttribute('data-price');
			var formattedPrice = formatter.format(price);
			tag.textContent = formattedPrice;
		});
		priceTags1.forEach(tag => {
			var price = tag.getAttribute('data-price');
			var formattedPrice = formatter.format(price);
			tag.textContent = formattedPrice;
		});
		priceTags2.forEach(tag => {
			var price = tag.getAttribute('data-price');
			var formattedPrice = formatter.format(price);
			tag.textContent = formattedPrice;
		});
		priceTags3.forEach(tag => {
			var price = tag.getAttribute('data-price');
			var formattedPrice = formatter.format(price);
			tag.textContent = formattedPrice;
		});
		function updateTotalItemCount() {
			var count = 0;
			var totalItem = document.querySelector('.btn-cart span');
			var checkboxes = document.querySelectorAll('.checkbox');

			checkboxes.forEach(function (checkbox) {
				console.log(checkbox.checked);
				if (checkbox.checked) {
					count++;
				}
			});
			console.log(count);
			totalItem.textContent = count;
		}
		function checkAll() {
			var count = 0;
			var totalItem = document.querySelector('.btn-cart span');
			var masterCheckbox = document.getElementById('checkboxAll').querySelector('input[type="checkbox"]');

			var count = 0;
			var isChecked = masterCheckbox.checked;
			var checkboxes = document.querySelectorAll('.checkbox');
			checkboxes.forEach(function (checkbox) {
				checkbox.checked = isChecked;
			});
			totalItem.textContent = count;
		}
		updateTotalItemCount(); 

		var checkboxes = document.querySelectorAll('.checkbox');
		console.log(checkboxes.length);
		var masterCheckbox = document.getElementById('checkboxAll').querySelector('input[type="checkbox"]');
		masterCheckbox.addEventListener('click', updateTotalItemCount);
		checkboxes.forEach(function (checkbox) {
			checkbox.addEventListener('change', updateTotalItemCount);
			
		});
	});
	function formatPrice(price) {
		return price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
	}
	function updateTotalPrice(quantityInput) {
		var container = quantityInput.closest('.cart-item');

		var totalPriceElement = container.querySelector('.js-format-price1');
		if (!totalPriceElement) {
			console.error('Could not find the total price element.');
			return;
		}

		var basePrice = Number(totalPriceElement.getAttribute('data-price'));
		var quantity = Number(quantityInput.value);
		var totalPrice = basePrice * quantity;

		totalPriceElement.innerHTML = formatPrice(totalPrice);
		updateProvisionalTotal();
	}

	function formatPrice(price) {
		return price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
	}

	function updateProvisionalTotal() {
		var checkboxes = document.querySelectorAll('.cart-item .checkbox:checked');
		var fund = document.querySelector('.price-final');
		var tempPrice = document.querySelector('.js-format-price2'); 
		var discount = document.querySelector('.price-discount');
		var total = 0;

		checkboxes.forEach(function (checkbox) {
			var container = checkbox.closest('.cart-item');
			var priceElement = container.querySelector('.js-format-price');
			var price = Number(priceElement.getAttribute('data-price'));
			var quantity = Number(container.querySelector('.valueQuantity').value);
			total += price * quantity;
		});

		var provisionalElement = document.querySelector('.js-format-price2');
		fund.classList.add('js-format-price3');
		fund.setAttribute('data-price', total);
		tempPrice.setAttribute('data-price', total);

		if (total > 0) {
			fund.innerHTML = formatPrice(total);
			fund.style.fontSize = '22px';
			discount.style.display = 'none';
		} else {
			discount.style.display = 'flex';
			fund.style.fontSize = '15px';
			fund.innerHTML = "Please select a product";
		}

		provisionalElement.setAttribute('data-price', total);
		provisionalElement.innerHTML = formatPrice(total);
	}

	function increseQuantity(element, storageQuantity) {
		var quantityInput = element.closest('.quantity').querySelector('.valueQuantity');
		var quantity = Number(quantityInput.value);
		storageQuantity = parseInt(storageQuantity, 10);
		if (quantity > storageQuantity-1) {
			Swal.fire({
				title: "Đạt giới hạn",
				text: "Tối đa sản phẩm với mục này!",
				icon: "warning"
			});
		} else {
			quantity++;
			quantityInput.value = quantity;
			updateTotalPrice(quantityInput);
		}
	}
	function decreseQuantity(element) {
		var quantityInput = element.closest('.quantity').querySelector('.valueQuantity');
		var quantity = Number(quantityInput.value);
		if (quantity <= 1) {
			deleteItem(1);
		} else {
			quantity--;
			quantityInput.value = quantity;
			updateTotalPrice(quantityInput);
		}
	}
	function checkAll() {
		var masterCheckbox = document.getElementById('checkboxAll').querySelector('input[type="checkbox"]');
		
		var count = 0;
		var isChecked = masterCheckbox.checked;
		var checkboxes = document.querySelectorAll('.checkbox');
		checkboxes.forEach(function (checkbox) {
			checkbox.checked = isChecked;
		});
		updateProvisionalTotal();
	}
	function updateMasterCheckbox() {

		var masterCheckbox = document.getElementById('checkboxAll').querySelector('input[type="checkbox"]');

		var checkboxes = document.querySelectorAll('.checkbox');

		var allChecked = true;
		checkboxes.forEach(function (checkbox) {
			if (!checkbox.checked) {
				allChecked = false;
			}
		});
			
		masterCheckbox.checked = allChecked;
		updateProvisionalTotal();
	}


</script>

@section scripts{
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script src="~/js/mustache.min.js"></script>
}